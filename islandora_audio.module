<?php

/**
 * @file
 * Handles the creation/display of islandora:sp-audioCModel objects.
 */

use Drupal\Core\Url;
use Drupal\Core\Link;

use Drupal\islandora\DublinCore;

/**
 * Implements hook_islandora_required_objects().
 */
function islandora_audio_islandora_required_objects(IslandoraTuque $connection) {
  $module_path = drupal_get_path('module', 'islandora_audio');
  // Audio Content Model.
  $audio_content_model = $connection->repository->constructObject('islandora:sp-audioCModel');
  $audio_content_model->owner = 'fedoraAdmin';
  $audio_content_model->label = 'Islandora Audio Content Model';
  $audio_content_model->models = 'fedora-system:ContentModel-3.0';
  // DS-COMPOSITE-MODEL Datastream.
  $datastream = $audio_content_model->constructDatastream('DS-COMPOSITE-MODEL', 'X');
  $datastream->label = 'DS-COMPOSITE-MODEL';
  $datastream->mimetype = 'application/xml';
  $datastream->setContentFromFile("$module_path/xml/islandora_audio_ds_composite_model.xml", FALSE);
  $audio_content_model->ingestDatastream($datastream);
  // Audio Collection.
  $audio_collection = $connection->repository->constructObject('islandora:audio_collection');
  $audio_collection->owner = 'fedoraAdmin';
  $audio_collection->label = 'Audio Collection';
  $audio_collection->models = 'islandora:collectionCModel';
  $audio_collection->relationships->add(FEDORA_RELS_EXT_URI, 'isMemberOfCollection', 'islandora:root');
  // Collection Policy Datastream.
  $datastream = $audio_collection->constructDatastream('COLLECTION_POLICY', 'X');
  $datastream->label = 'Collection policy';
  $datastream->mimetype = 'application/xml';
  $datastream->setContentFromFile("$module_path/xml/islandora_audio_collection_policy.xml", FALSE);
  $audio_collection->ingestDatastream($datastream);
  // TN Datastream.
  $datastream = $audio_collection->constructDatastream('TN', 'M');
  $datastream->label = 'Thumbnail';
  $datastream->mimetype = 'image/png';
  $datastream->setContentFromFile("$module_path/images/folder.png", FALSE);
  $audio_collection->ingestDatastream($datastream);
  return [
    'islandora_audio' => [
      'title' => 'Islandora audio',
      'objects' => [
        $audio_content_model,
        $audio_collection,
      ],
    ],
  ];
}

/**
 * Implements hook_CMODEL_PID_islandora_view_object().
 */
function islandora_audio_islandora_sp_audiocmodel_islandora_view_object($object, $page_number, $page_size) {
  return [
    '#theme' => 'islandora_audio',
    '#islandora_object' => $object,
  ];
}

/**
 * Implements hook_xml_form_builder_forms().
 */
function islandora_audio_xml_form_builder_forms() {
  $module_path = drupal_get_path('module', 'islandora_audio');
  return [
    'Audio MODS form' => [
      'form_file' => "$module_path/xml/islandora_audio_form_mods.xml",
    ],
  ];
}

/**
 * Implements hook_xml_form_builder_form_associations().
 */
function islandora_audio_xml_form_builder_form_associations() {
  return [
    'islandora_audio_mods_form' => [
      'content_model' => 'islandora:sp-audioCModel',
      'self_transform' => 'islandora_cleanup_mods_extended.xsl',
      'form_name' => 'Audio MODS form',
      'dsid' => 'MODS',
      'title_field' => ['titleInfo', 'title'],
      'transform' => 'mods_to_dc.xsl',
      'template' => FALSE,
    ],
  ];
}

/**
 * Implements hook_theme().
 */
function islandora_audio_theme($existing, $type, $theme, $path) {
  return [
    'islandora_audio' => [
      'template' => 'islandora_audio',
      'pattern' => 'islandora_audio__',
      'variables' => ['islandora_object' => NULL],
    ],
  ];
}

/**
 * Implements template_preprocess_HOOK().
 */
function template_preprocess_islandora_audio(array &$variables) {
  $islandora_object = $variables['islandora_object'];
  module_load_include('inc', 'islandora', 'includes/datastream');
  module_load_include('inc', 'islandora', 'includes/utilities');
  module_load_include('inc', 'islandora', 'includes/metadata');

  // We should eventually remove the DC object and dc_array code as it only
  // exists to not break legacy implementations.
  try {
    if (isset($islandora_object['DC']) && islandora_datastream_access(ISLANDORA_VIEW_OBJECTS, $islandora_object['DC'])) {
      $dc = $islandora_object['DC']->content;
      $dc_object = DublinCore::importFromXMLString($dc);
    }
  }
  catch (Exception $e) {
    drupal_set_message(t('Error retrieving object %s %t', ['%s' => $islandora_object->id, '%t' => $e->getMessage()]), 'error', FALSE);
  }
  $variables['islandora_dublin_core'] = isset($dc_object) ? $dc_object : NULL;
  $variables['dc_array'] = isset($dc_object) ? $dc_object->asArray() : [];
  $variables['islandora_object_label'] = $islandora_object->label;
  $variables['theme_hook_suggestions'][] = 'islandora_audio__' . str_replace(':', '_', $islandora_object->id);
  $variables['parent_collections'] = islandora_get_parents_from_rels_ext($islandora_object);
  $variables['metadata'] = islandora_retrieve_metadata_markup($islandora_object);
  $variables['description'] = islandora_retrieve_description_markup($islandora_object);

  // Start getting parameters for the player...
  $audio_params = [
    "pid" => $islandora_object->id,
  ];
  // Thumbnail.
  if (isset($islandora_object['TN']) && islandora_datastream_access(ISLANDORA_VIEW_OBJECTS, $islandora_object['TN'])) {
    $tn_url = Url::fromRoute('islandora.view_datastream_view', ['object' => $islandora_object->id, 'datastream' => 'TN'])->toString();
    $img = [
      '#theme' => 'image',
      '#title' => $islandora_object->label,
      '#uri' => $tn_url,
    ];
    $variables['islandora_thumbnail_img'] = \Drupal::service('renderer')->render($img);

    $audio_params += [
      'tn' => $tn_url,
    ];
  }

  // Audio player.
  // Determine whether to attempt to use the OBJ or PROXY_MP3.
  module_load_include('inc', 'islandora_audio', 'includes/utilities');
  $dsid = !isset($islandora_object['PROXY_MP3']) &&
    \Drupal::config('islandora_audio.settings')->get('islandora_audio_obj_fallback') &&
    isset($islandora_object['OBJ']) &&
    islandora_audio_datastream_valid_for_playback($islandora_object['OBJ']) ? 'OBJ' : 'PROXY_MP3';

  if (islandora_datastream_access(ISLANDORA_VIEW_OBJECTS, $islandora_object[$dsid])) {
    $audio_url = Url::fromRoute('islandora.view_datastream_view', ['object' => $islandora_object->id, 'datastream' => $dsid], ['absolute' => TRUE]);
    $audio_params += [
      "url" => $audio_url->toString(),
      "mime" => 'audio/mpeg',
    ];

    module_load_include('inc', 'islandora', 'includes/solution_packs');
    $viewer = islandora_get_viewer($audio_params, 'islandora_audio_viewers', $islandora_object);

    if ($viewer) {
      $variables['islandora_content'] = $viewer;
    }
    elseif (isset($variables['islandora_thumbnail_img'])) {
      $variables['islandora_content'] = Link::fromTextAndUrl($variables['islandora_thumbnail_img'], $audio_url);
    }
    else {
      $variables['islandora_content'] = Link::fromTextAndUrl($islandora_object->label, $audio_url);
    }
  }
}

/**
 * Implements hook_islandora_ingest_steps().
 */
function islandora_audio_islandora_sp_audiocmodel_islandora_ingest_steps() {
  return [
    'islandora_audio_upload' => [
      'weight' => 10,
      'type' => 'form',
      'form_class' => 'Drupal\islandora_audio\Form\AudioUpload',
    ],
  ];
}

/**
 * Implements hook_CMODEL_PID_islandora_derivative().
 */
function islandora_audio_islandora_sp_audiocmodel_islandora_derivative() {
  $derivative_list = [
    [
      'source_dsid' => NULL,
      'destination_dsid' => 'TN',
      'weight' => 1,
      'function' => [
        'islandora_audio_create_thumbnail',
      ],
      'file' => drupal_get_path('module', 'islandora_audio') . '/includes/derivatives.inc',
    ],
  ];
  if (!\Drupal::config('islandora_audio.settings')->get('islandora_audio_defer_derivatives_on_ingest')) {
    $derivative_list[] = [
      'source_dsid' => 'OBJ',
      'destination_dsid' => 'PROXY_MP3',
      'weight' => '0',
      'function' => [
        'islandora_audio_create_mp3',
      ],
      'file' => drupal_get_path('module', 'islandora_audio') . '/includes/derivatives.inc',
    ];
  }
  return $derivative_list;
}

/**
 * Implements hook_file_mimetype_mapping_alter().
 */
function islandora_audio_file_mimetype_mapping_alter(&$mapping) {
  // Make sure the mapping is sensible for audio/mpeg by removing
  // it from array and adding it to end so it has priority.
  $code = $mapping['extensions']['mp3'];
  unset($mapping['extensions']['mp3']);
  $mapping['extensions']['mp3'] = $code;
}

/**
 * Implements hook_help().
 */
function islandora_audio_help($route) {
  switch ($route) {
    // Main help page for the module.
    case 'help.page.islandora_audio':
      // About section.
      $output = '<h3>' . t('About') . '</h3>';
      $output .= '<p>' . t('The Islandora Audio module is one of the many Islandora Solution Packs. This module allows for the creation of audio collections which can be populated by uploading WAV and MP3 files as objects within Islandora. An audio file can then be made available for download by users when viewing the corresponding object. See the <a href=":wiki">Audio Solution Pack wiki*</a> for more information.', [
        ':wiki' => 'https://wiki.duraspace.org/display/ISLANDORA/Audio+Solution+Pack',
      ]) .
      '</p>';
      // Uses section.
      $output .= '<h3>' . t('Uses') . '</h3>';
      $output .= '<dt>' . t('Upload Audio') . '</dt><dd>';
      $output .= t('At www.yoursite.com/islandora/object/{ID}audio_collection/manage (ex: www.yoursite.com/islandora/object/islandora%3audio_collection/manage), you can click "Add an object to this Collection" and follow the ingest form to upload an audio file in the accepted formats.') .
      '</dd>';
      $output .= '<dt>' . t('View Audio Object') . '</dt><dd>' . t('At www.yoursite.com/islandora/object/{ID}, (ex: www.yoursite.com/islandora/object/islandora%3A10), you can play the audio, provided that an appropriate viewer has been configured at the <a href=":admin">Islandora Audio Configuration Page</a>.', [
        ':admin' => Url::fromRoute('islandora_audio.admin')->toString(),
      ]) .
      '</dd>';
      $output .= '<dt>' . t('Download Audio') . '</dt><dd>';
      $output .= t('There are two ways to download audio from an Islandora Audio object:</br>1. You can go to www.yoursite.com/islandora/object/{object ID}/manage/datastreams, click "download" next to either the "PROXY_MP3" datastream or the "OBJ" datastream, and save the file to your computer as you would anytime you download a file.<br/>2. You can go to www.yoursite.com/islandora/object/{object ID}, click play on the viewer, right-click the viewer, and select "Save audio as". However, this does not work on all devices.') .
      '</dd>';
      $output .= '</br></br><p>';
      $output .= t('*Links go to documentation for the Drupal 7 version of the module, as documentation for the Drupal 8 version of the module has not yet been written. There may be some small discrepencies; however, most key points remain useful.') .
      '</p>';

      return $output;

  }
}
